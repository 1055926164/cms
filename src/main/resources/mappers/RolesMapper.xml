<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xxxx.cms.dao.RolesMapper" >
  <resultMap id="BaseResultMap" type="com.xxxx.cms.vo.Roles" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="is_valid" property="isValid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, role_name, create_time, update_time, is_valid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_roles
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_roles
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xxxx.cms.vo.Roles" >
    insert into t_roles (id, role_name, create_time, 
      update_time, is_valid)
    values (#{id,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{isValid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xxxx.cms.vo.Roles" >
    insert into t_roles
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="isValid != null" >
        is_valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isValid != null" >
        #{isValid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xxxx.cms.vo.Roles" >
    update t_roles
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isValid != null" >
        is_valid = #{isValid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xxxx.cms.vo.Roles" >
    update t_roles
    set role_name = #{roleName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_valid = #{isValid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="queryAllRoles" parameterType="int" resultType="map">
      SELECT
        r.id,
        r.role_name as roleName,
        CASE
            WHEN IFNULL( temp.id, 0 ) = 0 THEN "" ELSE "selected"
        END AS "selected"
        FROM t_roles r
        LEFT JOIN
            (SELECT r.id FROM t_roles r LEFT JOIN t_user_roles ur on r.id=ur.role_id WHERE user_id=#{userId}) temp ON r.id = temp.id
        WHERE r.is_valid =1
  </select>
  <select id="selectByRoleName" parameterType="string" resultType="com.xxxx.cms.vo.Roles">
    select <include refid="Base_Column_List"/>
    from t_roles where is_valid=1 and role_name=#{roleName}
  </select>
  <select id="selectByParams" parameterType="com.xxxx.cms.query.RoleQuery" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from t_roles
    <where>
      is_valid=1
      <if test="null !=roleName and roleName !=''">
        and role_name like concat('%',#{roleName},'%')
      </if>
    </where>
  </select>
</mapper>